<map version="1.0.0"><node ID="D2939258-58B9-4145-8261-5E97A8CD853A" BACKGROUND_COLOR="#FFFFFF" TEXT="React DOM diff" COLOR="#415229" POSITION="right" STYLE="bubble"><edge COLOR="#ADD424" WIDTH="4" /><font NAME="PingFangSC-Medium" SIZE="18" /><node ID="979D9892-DF66-42CA-A4DD-864A2FE1DFFC" TEXT="&#31574;&#30053;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#35BAB1" WIDTH="6" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="D999982C-6DC3-4AB5-BE86-79398F25C5E0" TEXT="DOM &#33410;&#28857;&#24456;&#23569;&#36328;&#23618;&#32423;&#31227;&#21160;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#35BAB1" WIDTH="5" /><font NAME="HelveticaNeue-Light" SIZE="21" /></node>
<node ID="35FAB1E8-2643-42AF-AC3C-D5DC7487C128" TEXT="&#21516;&#31867;&#32452;&#20214;&#29983;&#25104;&#32467;&#26500;&#30456;&#20284;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#35BAB1" WIDTH="5" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="19E1577D-C668-49C0-ADB2-51E6137A6FFF" TEXT="&#21516;&#32423;&#33410;&#28857;&#65292;&#36890;&#36807; key &#21306;&#20998;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#35BAB1" WIDTH="5" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="03EC73D5-B802-4496-A5FE-89E4585FB282" TEXT="diff" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="6" /><font NAME="HelveticaNeue-Light" SIZE="21" /><node ID="CC9FB07A-1892-4AD8-B3D1-3D1C61B3D4AF" TEXT="v15" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="5" /><font NAME="HelveticaNeue-Light" SIZE="21" /><node ID="8B9FB610-9E33-4A48-BD92-DFBB0A9336C2" TEXT="tree diff" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="4" /><font NAME="HelveticaNeue-Light" SIZE="21" /><node ID="785BB035-21BF-4456-AB90-F4A639CB828A" TEXT="&#20998;&#23618;&#27604;&#36739;&#65292;&#20004;&#26869;&#26641;&#20165;&#27604;&#36739;&#21516;&#19968;&#23618;&#27425;&#30340;&#33410;&#28857;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="A4C8582C-F546-43C7-AEF6-29CED57EE130" TEXT="component diff" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="4" /><font NAME="HelveticaNeue-Light" SIZE="21" /><node ID="2398F9A3-1989-4260-BE42-D31937BC894C" TEXT="&#19981;&#21516;&#32452;&#20214;&#65292;&#26367;&#25442;&#25972;&#20010;&#32452;&#20214;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="B11651FD-0E5F-4CCB-9286-D737F91047AA" TEXT="&#21516;&#31867;&#32452;&#20214;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="A7DAEFF4-16C6-4C18-B172-1AFAF765A31B" TEXT="shouldComponentUpdate" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="HelveticaNeue-Light" SIZE="21" /></node>
<node ID="C2F80EFD-5E1A-4989-88E0-0D2DA54C5654" TEXT="&#21542;&#21017;&#25353;&#29031;&#21407;&#31574;&#30053;&#32487;&#32493;&#27604;&#36739;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="C5DA2F7D-49B4-44E5-A752-7C06328B9211" TEXT="&#26356;&#26032;&#26367;&#25442;&#23646;&#24615;&#20540;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
</node>
<node ID="AD6D1D58-653B-4AF2-BD89-2ED97F41B371" TEXT="element diff" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="4" /><font NAME="HelveticaNeue-Light" SIZE="21" /><node ID="59B499FD-0BE6-4839-B7B3-764D2069C04E" TEXT="&#25554;&#20837;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="8C2697EC-DC38-4916-AFEA-FB31B1DB8269" TEXT="&#31227;&#21160;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="55586082-CB24-47F6-BA2C-AFA860904374" TEXT="&#21024;&#38500;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="96F4C513-5A26-4107-B385-84EBDD42194C" TEXT="&#27880;&#24847;&#65306;&#27492;&#26102;&#22914;&#26524;&#27809;&#26377; key &#26631;&#35782;&#65292;&#21017;&#20250;&#36880;&#20010;&#23545;&#33410;&#28857;&#36827;&#34892;&#26356;&#26032;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="80A0D9B4-4DF1-41AE-B3F7-B789B3FBC265" TEXT="" COLOR="#46433C" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="HelveticaNeue-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>即将同一层的节点位置进行调整。如果未提供</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，那么</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> React </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>认为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> B </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>和</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> C </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>之后的对应位置组件类型不同，因此完全删除后重建，控制台输出如下：</span></p><p></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>B will unmount.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>C will unmount.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>C is created.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>B is created.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>C did mount.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>B did mount.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>A is updated.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>R is updated.</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>而如果提供了</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，如下面的代码：</span></p><p></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>shape5: function() {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return (</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    &lt;Root&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      &lt;A&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &lt;B key=&quot;B&quot; /&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &lt;C key=&quot;C&quot; /&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      &lt;/A&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    &lt;/Root&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>},</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>shape6: function() {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return (</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    &lt;Root&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      &lt;A&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &lt;C key=&quot;C&quot; /&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &lt;B key=&quot;B&quot; /&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      &lt;/A&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    &lt;/Root&gt;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>},</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>那么控制台输出如下：</p><p></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>C is updated.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>B is updated.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>A is updated.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>R is updated.</p></body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node ID="DA51EE15-A0A9-41BB-B8B0-8B238BA8A7F4" TEXT="v16" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="5" /><font NAME="HelveticaNeue-Light" SIZE="21" /><node ID="1CFCD14B-D7C7-4BAF-AEF1-BB7BE844BA1D" TEXT="&#20197;&#26032;&#33410;&#28857;&#20026;&#20934;&#65292;&#26500;&#24314;&#25972;&#20010; currentInWorkProgress" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="4" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="7D3E5FE4-77B4-44BF-BF92-CA9013CC937D" TEXT="TextNode(&#21253;&#21547;&#23383;&#31526;&#20018;&#21644;&#25968;&#23383;)" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="D878033F-7A00-4457-AB9A-B2A9083E792F" TEXT="currentFirstNode" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="B96879E4-FC51-4DCA-BDCE-C05354751993" TEXT="&#26159; TextNode" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (currentFirstChild !== null &amp;&amp; currentFirstChild.tag === HostText) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      // We already have an existing node so let&apos;s just update it and delete</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      // the rest.</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      const existing = useFiber(currentFirstChild, textContent, expirationTime);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      existing.return = returnFiber;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      return existing;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="60130E7D-2755-450B-9BF8-A01E09CE6166" TEXT="&#33410;&#28857;&#21487;&#20197;&#22797;&#29992;&#12290;&#26082;&#28982;&#26032;&#30340; child &#21482;&#26377;&#19968;&#20010; TextNode&#65292;&#37027;&#20040;&#22797;&#29992;&#33410;&#28857;&#20043;&#21518;&#65292;&#23601;&#25226;&#21097;&#19979;&#30340;&#33410;&#28857;&#21024;&#25481;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="AA76BDAB-9CF2-4D69-8982-6918A4F94FDF" TEXT="&#19981;&#26159; TextNode" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>deleteRemainingChildren(returnFiber, currentFirstChild);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>const created = createFiberFromText(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    textContent,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    returnFiber.mode,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>created.return = returnFiber;</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="60C5CB53-1388-4FDF-B55D-BA9FFBBD5CBB" TEXT="&#33410;&#28857;&#19981;&#33021;&#22797;&#29992;&#65292;&#25152;&#20197;&#23601;&#20174; currentFirstChild &#24320;&#22987;&#21024;&#25481;&#21097;&#20313;&#30340;&#33410;&#28857;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="E3ABFF56-F927-4ACC-9EDB-B827FC7C3938" TEXT="&#26032;&#24314;&#33410;&#28857;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
</node>
</node>
</node>
<node ID="595DAA77-B20E-424D-B447-32E0E4768B39" TEXT="&#21333;&#20010; React Element(&#36890;&#36807;&#35813;&#33410;&#28857;&#26159;&#21542;&#26377; $$typeof &#21306;&#20998;)" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><linktarget ID="Arrow_ID_F90B35FA-DADA-4F46-9FDD-F932DC649BE5_595DAA77-B20E-424D-B447-32E0E4768B39" STARTARROW="Default" COLOR="#9B9EEA" SOURCE="F90B35FA-DADA-4F46-9FDD-F932DC649BE5" ENDARROW="Default" /><node ID="0C719FDE-B8ED-445B-BAC9-E7943404D2B5" TEXT="&#33410;&#28857;&#26159;&#21542;&#21487;&#20197;&#22797;&#29992;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果以上两点相同，就代表这个节点只是变化了内容，不需要创建新的节点，可以复用的。</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>对应的源码如下：</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (child.key === key) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  if (</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    child.tag === Fragment</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    ? element.type === REACT_FRAGMENT_TYPE</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    : child.elementType === element.type</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  ) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为什么要删除老的节点的兄弟节点？</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>因为当前节点是只有一个节点，而老的如果是有兄弟节点是要删除的，是多于的。删掉了之后就可以复用老的节点了</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    deleteRemainingChildren(returnFiber, child.sibling);</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>复用当前节点</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    const existing = useFiber(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      child,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      element.type === REACT_FRAGMENT_TYPE</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      ? element.props.children</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      : element.props,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    existing.ref = coerceRef(returnFiber, child, element);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    existing.return = returnFiber;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    return existing;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="52642FC8-F2A9-4D4D-A7B4-B37A5CAAABDF" TEXT="key &#30456;&#21516;&#12290; " COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="BD2D1EFF-05E6-4F4A-8A7A-CFD4C136B5B1" TEXT="&#33410;&#28857;&#30340;&#31867;&#22411;&#30456;&#21516;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="9CFA701A-DB0C-40F9-8318-76BCFC129EAD" TEXT="&#22914;&#26524;&#33410;&#28857;&#30340;&#31867;&#22411;&#19981;&#30456;&#21516;&#65292;&#23601;&#23558;&#33410;&#28857;&#20174;&#24403;&#21069;&#33410;&#28857;&#24320;&#22987;&#25226;&#21097;&#20313;&#30340;&#37117;&#21024;&#38500;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>deleteRemainingChildren(returnFiber, child);</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>到这里，可能你们就会觉得接下来应该就是讲解当没有可以复用的节点的时候是如果创建节点的。</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>不过可惜你们猜错了。因为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Facebook </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的工程师很厉害，另外还做了一个工作来优化，来找到复用的节点。</span></p></body>
</html>
</richcontent>
<node ID="20DA1C03-B3A2-4C0E-9E30-CEF8A420F846" TEXT="&#24403;&#27809;&#26377;&#21487;&#20197;&#22797;&#29992;&#30340;&#33410;&#28857;&#30340;&#26102;&#20505;&#21019;&#24314;&#33410;&#28857;&#30340;&#65311;&#19981;&#26159;&#30340;&#65292;&#21478;&#22806;&#36824;&#20570;&#20102;&#19968;&#20010;&#24037;&#20316;&#26469;&#20248;&#21270;&#65292;&#26469;&#25214;&#21040;&#22797;&#29992;&#30340;&#33410;&#28857;&#12290;&#27604;&#22914;&#19978;&#22270;&#30340;&#24773;&#20917;&#23601;&#26159;&#26377;&#21487;&#33021;&#26356;&#26032;&#30340;&#26102;&#20505;&#21024;&#38500;&#20102;&#19968;&#20010;&#33410;&#28857;&#65292;&#20294;&#26159;&#21478;&#22806;&#30340;&#33410;&#28857;&#36824;&#30041;&#30528;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="AB044028-65CE-4621-83D5-2DCE9C6423BD" TEXT="&#20174; div &#19979;&#38754;&#30340;&#25152;&#26377;&#23376;&#33410;&#28857;&#21435;&#25214;&#26377;&#27809;&#26377;&#21487;&#20197;&#22797;&#29992;&#30340;&#33410;&#28857;&#65292;&#32780;&#19981;&#26159;&#20687; TextNode &#19968;&#26679;&#65292;&#21482;&#26159;&#25214;&#31532;&#19968;&#20010; child &#26159;&#21542;&#21487;&#20197;&#22797;&#29992;&#65292;&#22914;&#26524;&#24403;&#21069;&#33410;&#28857;&#30340; key &#19981;&#21516;&#65292;&#23601;&#20195;&#34920;&#32943;&#23450;&#19981;&#26159;&#21516;&#19968;&#20010;&#33410;&#28857;&#65292;&#25152;&#20197;&#25226;&#24403;&#21069;&#33410;&#28857;&#21024;&#38500;&#65292;&#28982;&#21518;&#20877;&#21435;&#25214;&#24403;&#21069;&#33410;&#28857;&#30340;&#20804;&#24351;&#33410;&#28857;&#65292;&#30452;&#21040;&#25214;&#21040; key &#30456;&#21516;&#65292;&#24182;&#19988;&#33410;&#28857;&#30340;&#31867;&#22411;&#30456;&#21516;&#65292;&#21542;&#21017;&#23601;&#21024;&#38500;&#25152;&#26377;&#30340;&#23376;&#33410;&#28857;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>找到</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>相同的节点，就会复用当前节点</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>while (child !== null) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  if (child.key === key) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    if (</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      child.tag === Fragment</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      ? element.type === REACT_FRAGMENT_TYPE</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      : child.elementType === element.type</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    ) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>复用节点逻辑，省略该部分代码，和上面复用节点的代码相同</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      // code ...</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      return existing;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    } else {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      deleteRemainingChildren(returnFiber, child);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      break;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  } else {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果没有可以复用的节点，就把这个节点删除</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    deleteChild(returnFiber, child);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  child = child.sibling;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
</node>
<node ID="54318AA7-DE84-45BA-A3EF-1EA02C85F1E6" TEXT="&#22312;&#19978;&#38754;&#36825;&#27573;&#20195;&#30721;&#25105;&#20204;&#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65292;&#24403; key &#30456;&#21516;&#65292;React &#20250;&#35748;&#20026;&#26159;&#21516;&#19968;&#20010;&#33410;&#28857;&#65292;&#25152;&#20197;&#24403; key &#30456;&#21516;&#65292;&#33410;&#28857;&#31867;&#22411;&#19981;&#21516;&#30340;&#26102;&#20505;&#65292;React &#20250;&#35748;&#20026;&#20320;&#24050;&#32463;&#25226;&#36825;&#20010;&#33410;&#28857;&#37325;&#26032;&#35206;&#30422;&#20102;&#65292;&#25152;&#20197;&#23601;&#19981;&#20250;&#20877;&#21435;&#25214;&#21097;&#20313;&#30340;&#33410;&#28857;&#26159;&#21542;&#21487;&#20197;&#22797;&#29992;&#12290;&#21482;&#26377;&#22312; key &#19981;&#21516;&#30340;&#26102;&#20505;&#65292;&#25165;&#20250;&#21435;&#25214;&#20804;&#24351;&#33410;&#28857;&#26159;&#21542;&#21487;&#20197;&#22797;&#29992;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="1C825D95-8B5D-4E48-B9E1-0924C32565CD" TEXT="&#25509;&#19979;&#26469;&#25165;&#26159;&#25105;&#20204;&#21069;&#38754;&#35828;&#30340;&#65292;&#22914;&#26524;&#27809;&#26377;&#25214;&#21040;&#21487;&#20197;&#22797;&#29992;&#30340;&#33410;&#28857;&#65292;&#28982;&#21518;&#23601;&#37325;&#26032;&#21019;&#24314;&#33410;&#28857;&#65292;&#28304;&#30721;&#22914;&#19979;&#65306;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>前面的循环已经把该删除的已经删除了，接下来就开始创建新的节点了</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (element.type === REACT_FRAGMENT_TYPE) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  const created = createFiberFromFragment(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    element.props.children,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    returnFiber.mode,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    element.key,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  created.return = returnFiber;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return created;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>} else {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  const created = createFiberFromElement(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    element,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    returnFiber.mode,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  created.ref = coerceRef(returnFiber, currentFirstChild, element);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  created.return = returnFiber;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return created;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>对于</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Fragment </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>节点和一般的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Element </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>节点创建的方式不同，因为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Fragment </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>本来就是一个无意义的节点，他真正需要创建</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Fiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的是它的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> children</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，而不是它自己，所以</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> createFiberFromFragment </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>传递的不是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> element</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，而是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> element.props.children</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node ID="49E1A1C9-690C-42BB-8FF9-9CEB169B262F" TEXT="&#25968;&#32452;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><linktarget ID="Arrow_ID_D209CE93-060E-448D-ABAE-ED2F2F364249_49E1A1C9-690C-42BB-8FF9-9CEB169B262F" STARTARROW="Default" COLOR="#9B9EEA" SOURCE="D209CE93-060E-448D-ABAE-ED2F2F364249" ENDARROW="Default" /><node ID="8A6616C8-A394-4FBF-AD88-B7B00A384328" TEXT=" &#30456;&#21516;&#20301;&#32622;(index)&#36827;&#34892;&#27604;&#36739;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="FCD7D566-53BD-42EF-BBAB-C0A767418EAC" TEXT="&#24403; newChild &#26159; TextNode &#30340;&#26102;&#20505;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (typeof newChild === &apos;string&apos; || typeof newChild === &apos;number&apos;) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>对于新的节点如果是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> string </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>或者</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> number</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，那么都是没有</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的，</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>所有如果老的节点有</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的话，就不能复用，直接返回</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> null</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>老的节点</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> null </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的话，代表老的节点是文本节点，就可以复用</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  if (key !== null) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    return null;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  }</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return updateTextNode(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    returnFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    oldFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    &apos;&apos; + newChild,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="54183231-2DBE-4DF7-B11B-F0F451C21082" TEXT="&#22914;&#26524; key &#19981;&#20026; null&#65292;&#37027;&#20040;&#23601;&#20195;&#34920;&#32769;&#33410;&#28857;&#19981;&#26159; TextNode&#65292;&#32780;&#26032;&#33410;&#28857;&#21448;&#26159; TextNode&#65292;&#25152;&#20197;&#36820;&#22238; null&#65292;&#19981;&#33021;&#22797;&#29992;&#65292;&#21453;&#20043;&#21017;&#21487;&#20197;&#22797;&#29992;&#65292;&#35843;&#29992; updateTextNode &#26041;&#27861;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="7A518867-B912-4D88-9803-B862C1157C30" TEXT="&#24403; newChild &#26159; Object &#30340;&#26102;&#20505;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (typeof newChild === &apos;object&apos; &amp;&amp; newChild !== null) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>有</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> $$typeof </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>代表就是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> ReactElement</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  switch (newChild.$$typeof) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    case REACT_ELEMENT_TYPE: {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>				// ReactElement </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的逻辑</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    case REACT_PORTAL_TYPE: {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>				// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>调用</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> updatePortal</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  }</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  if (isArray(newChild) || getIteratorFn(newChild)) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    if (key !== null) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      return null;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    }</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    return updateFragment(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      returnFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      oldFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      newChild,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      null,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="F90B35FA-DADA-4F46-9FDD-F932DC649BE5" TEXT="newChild &#26159; Object &#30340;&#26102;&#20505;&#22522;&#26412;&#19978;&#36208;&#30340;&#23601;&#26159; ReactElement &#30340;&#36923;&#36753;&#20102;&#65292;&#21028;&#26029; key &#21644; &#20803;&#32032;&#30340;&#31867;&#22411;&#26159;&#21542;&#30456;&#31561;&#26469;&#21028;&#26029;&#26159;&#21542;&#21487;&#20197;&#22797;&#29992;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><arrowlink ID="Arrow_ID_F90B35FA-DADA-4F46-9FDD-F932DC649BE5_595DAA77-B20E-424D-B447-32E0E4768B39" DESTINATION="595DAA77-B20E-424D-B447-32E0E4768B39" STARTARROW="Default" COLOR="#9B9EEA" ENDARROW="Default" /></node>
</node>
<node ID="600B76D5-8EEB-487E-8691-F41D9713C27B" TEXT="&#22914;&#20309;&#36941;&#21382;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="C0E82337-85D2-4F32-A3B6-7AA23A8154CE" TEXT="&#36825;&#37324;&#35201;&#27880;&#24847;&#65292;&#26032;&#30340;&#33410;&#28857;&#30340; children &#26159;&#34394;&#25311; DOM&#65292;&#25152;&#20197;&#36825;&#20010; children &#26159;&#19968;&#20010;&#25968;&#32452;&#65292;&#32780;&#23545;&#20110;&#20043;&#21069;&#25552;&#21040;&#30340;&#32769;&#30340;&#33410;&#28857;&#26641;&#26159;&#38142;&#34920;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>let newIdx = 0 // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>新数组的索引</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>for (; oldFiber !== null &amp;&amp; newIdx &lt; newChildren.length; newIdx++) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>遍历老的节点</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  nextOldFiber = oldFiber.sibling; </p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>返回复用节点的函数，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>newFiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>就是复用的节点。</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果为空，就代表同位置对比已经不能复用了，循环结束。</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  const newFiber = updateSlot(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    returnFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    oldFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    newChildren[newIdx],</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  </p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  if (newFiber === null) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    break;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  </p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>其他</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> code</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，比如删除复用的节点</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="7EE65266-AEB5-44E6-9752-D0F40F87CB25" TEXT="&#37027;&#20040;&#24490;&#29615;&#19968;&#20010;&#19968;&#20010;&#23545;&#27604;&#65292;&#23601;&#26159;&#36941;&#21382;&#25968;&#32452;&#30340;&#36807;&#31243;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
</node>
</node>
<node ID="7FB1EB2E-7729-4B87-ADEE-38D82897A35C" TEXT="&#36825;&#26159;&#31532;&#19968;&#27425;&#36941;&#21382;&#26032;&#25968;&#32452;&#65292;&#36890;&#36807;&#35843;&#29992; updateSlot &#26469;&#23545;&#27604;&#26032;&#32769;&#20803;&#32032;&#65292;&#21069;&#38754;&#20171;&#32461;&#30340;&#22914;&#20309;&#23545;&#27604;&#26032;&#32769;&#33410;&#28857;&#30340;&#20195;&#30721;&#37117;&#26159;&#22312;&#36825;&#20010;&#20989;&#25968;&#37324;&#12290;&#36825;&#20010;&#24490;&#29615;&#20250;&#25226;&#25152;&#20197;&#30340;&#20174;&#21069;&#38754;&#24320;&#22987;&#33021;&#22797;&#29992;&#30340;&#33410;&#28857;&#65292;&#37117;&#22797;&#29992;&#21040;&#12290;&#24403;&#36935;&#21040;&#19981;&#21487;&#22797;&#29992;&#26102;&#65292;&#36339;&#20986;&#24490;&#29615;&#12290;&#27492;&#26102;&#26377;&#19977;&#31181;&#24773;&#20917;&#65306;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="F0BAF9A5-BA0F-44C5-BD14-C7A7AAE3A884" TEXT="&#26032;&#33410;&#28857;&#24050;&#32463;&#36941;&#21382;&#23436;&#27605;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (newIdx === newChildren.length) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>新的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> children </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>长度已经够了，所以把剩下的删除掉</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  deleteRemainingChildren(returnFiber, oldFiber);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return resultingFirstChild;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="E4F7271E-AB44-4191-AFBE-23278A8E98E7" TEXT="&#22914;&#26524;&#26032;&#33410;&#28857;&#24050;&#32463;&#36941;&#21382;&#23436;&#27605;&#30340;&#35805;&#65292;&#20063;&#23601;&#26159;&#27809;&#26377;&#35201;&#26356;&#26032;&#30340;&#20102;&#65292;&#36825;&#31181;&#24773;&#20917;&#19968;&#33324;&#23601;&#26159;&#20174;&#21407;&#26469;&#30340;&#25968;&#32452;&#37324;&#38754;&#21024;&#38500;&#20102;&#20803;&#32032;&#65292;&#37027;&#20040;&#30452;&#25509;&#25226;&#21097;&#19979;&#30340;&#32769;&#33410;&#28857;&#21024;&#38500;&#20102;&#23601;&#34892;&#20102;&#12290;&#36824;&#26159;&#25343;&#19978;&#38754;&#30340;&#22270;&#30340;&#20363;&#23376;&#20030;&#20363;&#65292;&#32769;&#30340;&#38142;&#34920;&#37324;**&#65311;&#65311;&#65311;&#36824;&#26377;&#24456;&#22810;&#33410;&#28857;&#65292;&#32780;&#26032;&#30340;&#38142;&#34920;&#65311;&#65311;&#65311;&#24050;&#32463;&#27809;&#26377;&#33410;&#28857;&#20102;&#65292;&#25152;&#20197;&#32769;&#30340;&#38142;&#34920;&#65311;&#65311;&#65311;**&#19981;&#31649;&#26159;&#26377;&#22810;&#23569;&#33410;&#28857;&#65292;&#37117;&#19981;&#33021;&#22797;&#29992;&#20102;&#65292;&#25152;&#20197;&#27809;&#29992;&#20102;&#65292;&#30452;&#25509;&#21024;&#38500;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="E3ACEE09-A70B-40F2-9C42-83FAC1FC93B4" TEXT="&#32769;&#33410;&#28857;&#24050;&#32463;&#36941;&#21382;&#23436;&#27605;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>if (oldFiber === null) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果老的节点已经被复用完了，对剩下的新节点进行操作</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  for (; newIdx &lt; newChildren.length; newIdx++) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    const newFiber = createChild(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      returnFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      newChildren[newIdx],</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    );</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  return resultingFirstChild;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>oldFiber === null </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>就是用来判断老的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Fiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>节点变量完了的代码，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Fiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链表是一个单向链表，所以为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> null </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的时候代表已经结束了。所以就直接把剩余的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> newChild </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>通过循环创建</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Fiber</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>到这里，目前简单的对数组进行增、删节点的对比还是比较简单，接下来就是移动的情况是如何进行复用的呢？</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="971D85B3-ED8C-4E30-9DD0-91848AC523A3" TEXT="&#22914;&#26524;&#32769;&#30340;&#33410;&#28857;&#22312;&#31532;&#19968;&#27425;&#24490;&#29615;&#30340;&#26102;&#20505;&#23601;&#34987;&#22797;&#29992;&#23436;&#20102;&#65292;&#26032;&#30340;&#33410;&#28857;&#36824;&#26377;&#65292;&#24456;&#26377;&#21487;&#33021;&#23601;&#26159;&#26032;&#22686;&#20102;&#33410;&#28857;&#30340;&#24773;&#20917;&#12290;&#37027;&#20040;&#36825;&#20010;&#26102;&#20505;&#21482;&#38656;&#35201;&#26681;&#25454;&#25226;&#21097;&#20313;&#26032;&#30340;&#33410;&#28857;&#30452;&#25509;&#21019;&#24314; Fiber &#23601;&#34892;&#20102;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="B6ADE184-CF8E-4AFB-AB8A-AF4A3176CEF6" TEXT="&#31227;&#21160;&#30340;&#24773;&#20917;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="CC3C37AF-63DF-4214-9EE6-979B5BF52108" TEXT="&#23547;&#25214;&#21487;&#22797;&#29992;&#30340;&#20803;&#32032;&#65292;&#21363;&#25226;&#25152;&#26377;&#32769;&#25968;&#32452;&#20803;&#32032;&#25353; key &#25110;&#32773;&#26159; index &#25918; Map &#37324;&#65292;&#28982;&#21518;&#36941;&#21382;&#26032;&#25968;&#32452;&#65292;&#26681;&#25454;&#26032;&#25968;&#32452;&#30340; key &#25110;&#32773; index &#24555;&#36895;&#25214;&#21040;&#32769;&#25968;&#32452;&#37324;&#38754;&#26159;&#21542;&#26377;&#21487;&#22797;&#29992;&#30340;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>function mapRemainingChildren(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> returnFiber: Fiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> currentFirstChild: Fiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>): Map&lt;string | number, Fiber&gt; {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  const existingChildren: Map&lt;string | number, Fiber&gt; = new Map();</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  let existingChild = currentFirstChild; // currentFirstChild </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>是老数组链表的第一个元素</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  while (existingChild !== null) {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>看到这里可能会疑惑怎么在</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Map </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>里面的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> fiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>还是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> fiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> index </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>呢？</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>我觉得是根据数据类型，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>fiber </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>是字符串，而</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> index </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>是数字，这样就能区分了</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>所以这里是用的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> map</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，而不是对象，如果是对象的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>就不能区分</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>字符串类型和数字类型了。</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    if (existingChild.key !== null) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      existingChildren.set(existingChild.key, existingChild);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    } else {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      existingChildren.set(existingChild.index, existingChild);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    existingChild = existingChild.sibling;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>	}</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>	return existingChildren;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
</node>
<node ID="9C4B8B3B-F869-45A1-8BAB-F5EF079CD7A1" TEXT="&#36825;&#20010; mapRemainingChildren &#23601;&#26159;&#23558;&#32769;&#25968;&#32452;&#23384;&#25918;&#21040; Map &#37324;&#38754;&#12290;&#20803;&#32032;&#26377; key &#23601; Map &#30340;&#38190;&#23601;&#23384; key&#65292;&#27809;&#26377; key &#23601;&#23384; index&#65292;key &#19968;&#23450;&#26159;&#23383;&#31526;&#20018;&#65292;index &#19968;&#23450;&#26159; number&#65292;&#25152;&#20197;&#21462;&#30340;&#26102;&#20505;&#26159;&#33021;&#21306;&#20998;&#30340;&#65292;&#25152;&#20197;&#36825;&#37324;&#29992;&#30340;&#26159; Map&#65292;&#32780;&#19981;&#26159;&#23545;&#35937;&#65292;&#22914;&#26524;&#26159;&#23545;&#35937;&#65292;&#23646;&#24615;&#26159;&#23383;&#31526;&#20018;&#65292;&#23601;&#27809;&#21150;&#27861;&#21306;&#21035;&#26159; key &#36824;&#26159; index &#20102;&#12290;
&#29616;&#22312;&#26377;&#20102;&#36825;&#20010; Map&#65292;&#21097;&#19979;&#30340;&#23601;&#26159;&#24490;&#29615;&#26032;&#25968;&#32452;&#65292;&#25214;&#21040; Map &#37324;&#38754;&#21487;&#20197;&#22797;&#29992;&#30340;&#33410;&#28857;&#65292;&#22914;&#26524;&#25214;&#19981;&#21040;&#23601;&#21019;&#24314;&#65292;&#36825;&#20010;&#36923;&#36753;&#22522;&#26412;&#19978;&#36319; updateSlot &#30340;&#22797;&#29992;&#36923;&#36753;&#24456;&#20687;&#65292;&#19968;&#20010;&#26159;&#20174;&#32769;&#25968;&#32452;&#38142;&#34920;&#20013;&#33719;&#21462;&#33410;&#28857;&#23545;&#27604;&#65292;&#19968;&#20010;&#26159;&#20174; Map &#37324;&#33719;&#21462;&#33410;&#28857;&#23545;&#27604;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="1" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果前面的算法有复用，那么</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> newIdx </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>就不从</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> 0 </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>开始</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>for (; newIdx &lt; newChildren.length; newIdx++) {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  const newFiber = updateFromMap(</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    existingChildren,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    returnFiber,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    newIdx,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    newChildren[newIdx],</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    expirationTime,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  );</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>省略删除</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> existingChildren </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>中的元素和添加</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Placement </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>副作用的情况</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p><p></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作者：桃翁</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>链接：</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://juejin.im/post/5d3e3231e51d4510926a7c39</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>来源：掘金</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node ID="D209CE93-060E-448D-ABAE-ED2F2F364249" TEXT="&#21487;&#36845;&#20195;&#30340; children&#65292;&#36319;&#25968;&#32452;&#30340;&#22788;&#29702;&#26041;&#24335;&#24046;&#19981;&#22810;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><arrowlink ID="Arrow_ID_D209CE93-060E-448D-ABAE-ED2F2F364249_49E1A1C9-690C-42BB-8FF9-9CEB169B262F" DESTINATION="49E1A1C9-690C-42BB-8FF9-9CEB169B262F" STARTARROW="Default" COLOR="#9B9EEA" ENDARROW="Default" /></node>
</node>
<node ID="6592C961-11F1-48C9-B2EF-32536D4F33FD" TEXT="&#21442;&#25968;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="4" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="F744F357-0253-4CE5-9C8F-66E9AC131360" TEXT="returnFiber &#26159;&#21363;&#23558; Diff &#30340;&#36825;&#23618;&#30340;&#29238;&#33410;&#28857;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="A44F57F5-8670-456D-8CDB-CF0EA0E6711B" TEXT="currentFirstChild&#26159;&#24403;&#21069;&#23618;&#30340;&#31532;&#19968;&#20010; Fiber &#33410;&#28857;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="2AE7D910-3C31-47CE-B689-C06C1A668882" TEXT="currentFirstNode &#26159;&#24403;&#21069;&#35813;&#23618;&#30340;&#31532;&#19968;&#20010;&#33410;&#28857;&#65292;reconcileChildFibers &#20256;&#36827;&#26469;&#30340;&#21442;&#25968;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="2" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="99117E79-8985-4A03-B77D-10842C8F5709" TEXT="newChild &#26159;&#21363;&#23558;&#26356;&#26032;&#30340; vdom &#33410;&#28857;(&#21487;&#33021;&#26159; TextNode&#12289;&#21487;&#33021;&#26159; ReactElement&#65292;&#21487;&#33021;&#26159;&#25968;&#32452;)&#65292;&#19981;&#26159; Fiber &#33410;&#28857;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
<node ID="EB8E19C2-16FB-41C1-B807-E50496AAA8EE" TEXT="expirationTime &#26159;&#36807;&#26399;&#26102;&#38388;&#65292;&#36825;&#20010;&#21442;&#25968;&#26159;&#36319;&#35843;&#24230;&#26377;&#20851;&#31995;&#30340;&#65292;&#26412;&#31995;&#21015;&#36824;&#27809;&#35762;&#35299;&#65292;&#24403;&#28982;&#36319; Diff &#20063;&#27809;&#26377;&#20851;&#31995;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#259BBA" WIDTH="3" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
</node>
</node>
<node ID="FFA67AD9-AA4D-4245-8A7E-2BDBC35345AE" TEXT="&#24212;&#29992;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EE685E" WIDTH="6" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="6C249ED3-5D14-4B2F-BC5E-28164CECFADD" TEXT="&#22312;&#23454;&#29616;&#33258;&#24049;&#30340;&#32452;&#20214;&#26102;&#65292;&#20445;&#25345;&#31283;&#23450;&#30340; DOM &#32467;&#26500;&#20250;&#26377;&#21161;&#20110;&#24615;&#33021;&#30340;&#25552;&#21319;&#12290;&#20363;&#22914;&#65292;&#25105;&#20204;&#26377;&#26102;&#21487;&#20197;&#36890;&#36807; CSS &#38544;&#34255;&#25110;&#26174;&#31034;&#26576;&#20123;&#33410;&#28857;&#65292;&#32780;&#19981;&#26159;&#30495;&#30340;&#31227;&#38500;&#25110;&#28155;&#21152; DOM &#33410;&#28857;&#12290;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EE685E" WIDTH="5" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="0574062D-7FD2-455C-BC03-8702E8F4F495" TEXT="&#20351;&#29992;&#25968;&#32452; index &#20316;&#20026; key &#30340;&#38382;&#39064;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EEA600" WIDTH="6" /><font NAME="PingFangSC-Light" SIZE="21" /><node ID="1A69A556-E99D-489F-82E5-386F140EC5EC" TEXT="&#24615;&#33021;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EEA600" WIDTH="5" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>将</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> [{name: a, id: 0}, {name: b, id: 1}] </span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>转变成</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> [{name: c, id: 2}, {name: a, id: 0}, {name: b, id: 1}]  </span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>这种情况是最接近最开始的例子的，我们希望的是创建一个新的节点然后插入到列表的最前面。</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>当用</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>id</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>时，很显然，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>0</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的节点与</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>1</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的节点都不用进行任何变化，只有</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>2</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的节点需要被创建然后</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>insert</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>到列表中。</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>当用</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>index</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>时，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>0</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>与</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>1</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的节点都需要被更新，此外还有创建</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>2</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的节点，然后</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>append</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>到列表中。无论是性能与实际的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>dom</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>操作其实都不符合我们的预期。</span></p></body>
</html>
</richcontent>
<node ID="1C818016-8358-4EBB-AC42-55F3F493B969" TEXT="&#23548;&#33268;&#21024;&#38500;&#21644;&#37325;&#26032;&#21019;&#24314;&#20803;&#32032;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EEA600" WIDTH="4" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
<node ID="DB254016-07D4-49E5-99B8-3677D556BD09" TEXT="bug" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EEA600" WIDTH="5" /><font NAME="PingFangSC-Light" SIZE="21" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '><a href='https://www.sail.name/2019/08/10/about-use-index-as-key/'>https://www.sail.name/2019/08/10/about-use-index-as-key/</a></p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>首先选中第三项</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>, </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>也就是选中</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>card</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>项</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>, </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>接下来点击按钮会删除第二项</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>,</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>也就是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>box, </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>这个时候就变成最初的第四项</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>dog</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>被选中了。</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>通过表格来阐述下</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>:</span></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>删除之前</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key	id	index	name</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>0	98	0	apple</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>1	1997	1	box</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>2	fff	2	card</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>3	4	3	dog</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>删除之后</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key	id	index	name</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>0	98	0	apple</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>1	fff	1	card</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>2	4	2	dog</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>使用的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>index</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>作为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>key,</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>因为最初选择的是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>card,key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>2,</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>删除过后</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>,key</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>为</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>2</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的元素是</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>dog</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p></body>
</html>
</richcontent>
<node ID="263EC3D8-21EE-4BF2-B286-83E0F1E4ABF0" TEXT="&#21024;&#38500;&#20803;&#32032;&#65292;&#23548;&#33268;&#35823;&#21024;" COLOR="#36342E" POSITION="right" STYLE="fork"><edge COLOR="#EEA600" WIDTH="4" /><font NAME="PingFangSC-Light" SIZE="21" /></node>
</node>
</node>
</node>
</map>
