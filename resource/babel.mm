<map version="1.0.0"><node ID="ED2FD0AC-EA17-420C-A10F-11EEB7C14706" BACKGROUND_COLOR="#FFFFFF" TEXT="babel" COLOR="#164355" POSITION="right" STYLE="bubble"><edge COLOR="#FFFFFF" WIDTH="2" /><font NAME="HelveticaNeue-Light" SIZE="24" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>https://mp.weixin.qq.com/s?__biz=MzU5MjczNTg2MQ==&amp;mid=2247485482&amp;idx=1&amp;sn=05e0933f43e389ed98edc56a14f08603&amp;chksm=fe1a7330c96dfa2661a9119067572369f02b043242dc6dac16c1e3302739e703a8b2a8eb1604&amp;mpshare=1&amp;scene=1&amp;srcid=0620gs3rAKJwvER5kPQb25dW&amp;sharer_sharetime=1592656970142&amp;sharer_shareid=4bfd3126d167295eff43bc1127081905#rd</p></body>
</html>
</richcontent>
<node ID="1C15E166-7D30-49AC-A885-BFB41D7E8BB0" TEXT="&#20351;&#29992;&#26041;&#24335;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="DD1626A7-C26D-454E-A08D-1FD552421B5E" TEXT="&#20351;&#29992;&#36716;&#25442;&#25554;&#20214;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(35, 35, 35, 1.000000); font: 26px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>babel-plugin-transform-xxx</p></body>
</html>
</richcontent>
<node ID="9911DB60-4BA1-41FC-A244-1B36AAE79A66" TEXT="&#20248;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="9CD5EFBF-DAB6-42C4-9BBC-F5D64F0D0AD5" TEXT="&#20316;&#29992;&#22495;&#26159;&#27169;&#22359;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="0290E253-9638-432C-9B5F-71D2C1286DD6" TEXT="&#36991;&#20813;&#20840;&#23616;&#20914;&#31361;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="E1A202E0-D2C2-496B-B8B4-E5864D2DB3CE" TEXT="&#25353;&#38656;&#24341;&#20837;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="1E0599FD-5AFD-4E08-8107-091D8162CE99" TEXT="&#36991;&#20813;&#19981;&#24517;&#35201;&#24341;&#20837;&#36896;&#25104;&#21450;&#20195;&#30721;&#33219;&#32959;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="9B05A955-BF97-4567-AC50-705EEE0C754D" TEXT="&#32570;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="170BA48F-BE7E-4665-A1FE-9E92ED8FBD2B" TEXT="&#27169;&#22359;&#20869;&#21333;&#29420;&#24341;&#29992;&#21644;&#23450;&#20041; polyfill &#20989;&#25968;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="9863B900-5E59-431F-9040-45EDC454D675" TEXT="&#37325;&#22797;&#23450;&#20041;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="33D56838-AD9B-4596-A223-0F4E6A5ADD48" TEXT="&#20195;&#30721;&#20887;&#20313;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="9CB3AD91-5070-4CAA-A2B0-86A7A7F6283D" TEXT="&#25928;&#26524;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="BF3D8E05-F576-4088-BFE8-231DF25C553B" TEXT="&#20195;&#30721;&#20013;&#27599;&#20010;&#20351;&#29992;&#23545;&#24212; API &#30340;&#20195;&#30721;&#34987;&#36716;&#25104; polyfill &#20013;&#23454;&#29616;&#30340;&#20195;&#30721;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="C0005B71-0F1D-4B02-A004-1EAEFB93BC6A" TEXT="transform-runtime" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>正如上文讲到的，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Babel </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>会使用如</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> _classCallCheck </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>等辅助函数，这些函数会被注入到每一个需要的文件中。而</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> babel-plugin-transform-runtime </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>插件的作用是通过引用</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> babel-runtime </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>库来避免重复注入这些辅助函数。如转换</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> class </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>语法时，生成的代码会像下面这样。</span></p><p></p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>导入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> @babel/runtime/helpers/classCallCheck</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>var _classCallCheck = require(&quot;babel-runtime/helpers/classCallCheck&quot;);</p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>var Circle = function Circle() {</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  _classCallCheck(this, Circle);</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>};</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>此插件支持三个参数</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> polyfill </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>、</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>helpers</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>、</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>regenerator </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>helpers </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>参数表示是否需要引用</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>babel-runtime/helpers</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，至于另两个参数会在介绍</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> babel-runtime </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>插件的时候详细介绍，默认配置如下所示。</span></p><p></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>{</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  &quot;plugins&quot;: [</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    [</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      &quot;transform-runtime&quot;,</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      {</p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &quot;helpers&quot;: true, // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>helpers</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &quot;polyfill&quot;: false, // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>polyfill</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>（</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>core-js</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>提供的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>polyfill</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>）</span></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>        &quot;regenerator&quot;: true // </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>regenerator</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>      }</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>    ]</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>  ]</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>}</p></body>
</html>
</richcontent>
<node ID="3E0C75C3-066A-4986-B39D-C3FBFD23DF88" TEXT="&#20248;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="AC18D125-5DBE-4E9F-82A3-06135AFF9D3A" TEXT="&#26080;&#20840;&#23616;&#27745;&#26579;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="7B27F80E-838D-41B8-822E-762CDB93F93D" TEXT="&#20381;&#36182;&#32479;&#19968;&#25353;&#38656;&#24341;&#20837;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="A32053FE-A830-4503-B1C8-EB8107701269" TEXT="&#21508;&#20010;&#27169;&#22359;&#20849;&#20139; polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="B97348BA-13AD-428B-8EFD-C3DF8D3F9179" TEXT="&#26080;&#37325;&#22797;&#24341;&#20837;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="D58B4CDE-DEBC-4369-88D8-ECDD0DFD38DD" TEXT="&#26080;&#22810;&#20313;&#24341;&#20837;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="E67AAB94-D21E-4E2D-8D0F-BD3263C4B6DE" TEXT="&#36866;&#21512;&#29992;&#26469;&#32534;&#20889;&#19977;&#26041;&#24211;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="7C6CD8EA-7E82-41EF-BDE5-47327EEA33A7" TEXT="&#32570;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="B994E0D2-C62D-4A8C-BD44-20F3F82FC30A" TEXT="&#34987; polyfill &#30340;&#23545;&#35937;&#26159;&#20020;&#26102;&#26500;&#36896;&#24182;&#34987;import/require &#30340;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="F3C843F5-BC6F-4DB5-9754-7FDDDF88C8CB" TEXT="&#19981;&#26159;&#30495;&#27491;&#25346;&#36733;&#21040;&#20840;&#23616;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="45798160-CB68-4EA0-BDCB-2AF1E09672A8" TEXT="&#19981;&#26159;&#20840;&#23616;&#29983;&#25928;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="F530FC98-C116-4F5A-A586-80AD6B1EAF76" TEXT="&#26080;&#27861;&#20351;&#29992;&#23454;&#20363;&#21270;&#23545;&#35937;&#30340;&#26041;&#27861;, &#22914;[].include(x), &#20381;&#36182;&#20110;Array.prototype.include" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
</node>
<node ID="85D85A25-EBA4-45D8-AD60-C78AADEAC02D" TEXT="&#20840;&#23616; babel-polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>在配置</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> babel-plugin-transform-runtime </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>插件时还提到两个参数，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>polyfill </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>和</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> regenerator</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，分别用以配置是否引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> core-js </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>垫片和</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> regenerator-runtime</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>此处的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> core-js </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>垫片库与</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> babel-polyfill </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>是有差别的。为了不污染全局作用域，这里的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>core-js</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>不支持内置对象的实例方法，例如</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> [1,2,3].includes(1)</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。但支持将</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Promise</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>、</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Symbol </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>等非实例方法以函数的方式从</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> core-js </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>中引入。例如我们代码中使用的</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Promise </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>会转换成</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> var _Promise = require(&quot;babel-runtime/core-js/promise.js&quot;);</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。所以如果我们要使用到实例方法，必须要使用</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> babel-polyfill</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p></body>
</html>
</richcontent>
<node ID="2A55A5C4-B632-4DC3-879A-8168D70D50BC" TEXT="&#20248;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="9478061C-E748-4744-B626-48EA5831752E" TEXT="&#19968;&#27425;&#24615;&#35299;&#20915;&#25152;&#26377;&#20860;&#23481;&#24615;&#38382;&#39064;," COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="D4EFF47F-81D9-4C19-A64E-F3BA2438C007" TEXT="&#20840;&#23616;&#30340;&#29983;&#25928;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="0003A191-1E1D-4E58-AB27-496443B28AE2" TEXT="&#32570;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="BC247B61-E1AB-4261-964F-C0E8E7A00EC4" TEXT="&#24341;&#20837;&#25152;&#26377; polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="ECD1BEE1-8CD2-4AFA-AE65-B99E42AF69B9" TEXT="&#25171;&#21253;&#21518;&#30340; js &#25991;&#20214;&#20307;&#31215;&#20250;&#20559;&#22823;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="0695DBE4-CBE6-43E0-9F50-EB34C489F4E2" TEXT="&#23545;&#20110;&#29616;&#20195;&#30340;&#27983;&#35272;&#22120;, &#26377;&#20123;&#19981;&#38656;&#35201; polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="3A1B20EA-9805-4A24-81F3-9782605C798C" TEXT="&#36896;&#25104;&#27969;&#37327;&#28010;&#36153;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="1B4F16AB-F9E5-4033-B7A0-8F6BD6198256" TEXT="&#27745;&#26579;&#20102;&#20840;&#23616;&#23545;&#35937;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="841604B2-9B85-4EB2-BCD0-CC0A1BFD661C" TEXT="&#19981;&#36866;&#21512;&#26694;&#26550;&#25110;&#24211;&#30340;&#24320;&#21457;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="836A0FEC-0567-471A-8C2D-C781B4D282C6" TEXT="&#20840;&#23616; babel-polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>使用方法</p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>	•	packge.json</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>引入依赖</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>babel-preset-env</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span></p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>	•	.babelrc</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>中使用配置</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>preset-env</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span></p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	•	</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>指定</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>useBuiltins</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>选项为</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>true</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span></p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	•	</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>指定</span><span style='color: rgba(0, 0, 0, 1.000000); font: bold 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Bold"; '>浏览器环境或</span><span style='color: rgba(0, 0, 0, 1.000000); font: bold 12px "Times"; -cocoa-font-postscriptname: "Times-Bold"; '> node </span><span style='color: rgba(0, 0, 0, 1.000000); font: bold 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Bold"; '>环境</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>, </span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>配置需要兼容的浏览器列表</span></p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	•	</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>在</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>webpack</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>入口文件中使用</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>import/require</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>引入</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>polyfill</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>, </span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>如</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>import &apos;babel-polyfill&apos;</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span></p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	•	</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>以上配置完成之后</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>, </span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>babe</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>l </span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>会根据指定的浏览器兼容列表自动引入所有所需的</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Courier"; -cocoa-font-postscriptname: "Courier"; '>polyfill</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>, </span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>不管你代码中有没有使用</span></p></body>
</html>
</richcontent>
<node ID="E69D4E6F-279F-45B7-8666-1C49CB9DD027" TEXT="&#20351;&#29992; babel-preset-env &#25554;&#20214;&#21644; useBuiltIns &#23646;&#24615;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="82258EDE-6475-4563-AE2F-49E3B8DA4770" TEXT="&#20248;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="C994A61B-6043-476C-8F49-1B67F7044E25" TEXT="&#25353;&#38656; (&#25353;&#29031;&#25351;&#23450;&#30340;&#27983;&#35272;&#22120;&#29615;&#22659;&#25152;&#38656;) &#24341;&#20837;polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="0DC876A0-E7C7-46E9-A7B7-B15DB7D3D8E5" TEXT="&#37197;&#32622;&#31616;&#21333;, &#26080;&#38656;&#23545;webpack&#20570;&#39069;&#22806;&#30340;&#37197;&#32622;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="37083B75-9F40-40DB-B343-9449FE6AD50A" TEXT="polyfill.io" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="3256993C-5749-44BB-967B-053827201FE2" TEXT="&#20197; CDN&#26041;&#24335;&#25552;&#20379;&#30340; polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="A3A9ED5C-39A6-4D5A-883D-4F5C6FF4AF1D" TEXT="&#21487;&#26681;&#25454; UA &#33258;&#21160;&#36820;&#22238; polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="054B87C1-552F-48D1-9068-E5C2A5B177DD" TEXT="&#27880;&#24847;&#20107;&#39033;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="E0C4BC9B-FF2E-4C83-9637-52D8580F053B" TEXT="babel &#40664;&#35748;&#21482;&#36716;&#25442;&#35821;&#27861;, &#32780;&#19981;&#36716;&#25442;&#26032;&#30340; API&#65292;API &#30001; ployfill &#36716;&#25442;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="17EC32FA-2E73-47F3-9C76-32E6C761F71B" TEXT="&#22914;&#38656;&#20351;&#29992;&#26032;&#30340; API, &#38656;&#20351;&#29992;&#23545;&#24212;&#30340;&#36716;&#25442;&#25554;&#20214;&#25110;&#32773; polyfill" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="C251FDB1-B2AE-485B-A237-811075DA6A9D" TEXT="Babel 7" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="46259F4E-0840-4636-B185-085B037D7A1C" TEXT="&#26032;&#29305;&#24615;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="B3C37299-E4E0-4B89-A9CF-3E4586CBE5CA" TEXT="&#33258;&#21160;&#24341;&#29992; polyfill" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="1AC188A4-7935-45D0-859A-738E5948B454" TEXT="useBuiltIns: &#39;entry&#39;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果使用这个选项，需要在入口文件中引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> &quot;@babel/polyfill&quot;</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Babel </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>将会根据指定的环境自动将</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>@babel/polyfill </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>打散成单独的模块引入。</span></p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>入口文件</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>import &quot;@babel/polyfill&quot;;</p><p></p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>经过</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Babel </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>后输出，这里会根据当前指定的环境是否已经支持来决定引入哪些模块</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>import &quot;core-js/modules/es7.string.pad-start&quot;;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>import &quot;core-js/modules/es7.string.pad-end&quot;;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// .....</p></body>
</html>
</richcontent>
</node>
<node ID="9AC0E99B-4952-4062-B090-2AEB3C3591C9" TEXT="useBuiltIns: &#39;usage&#39;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>相比于</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> useBuiltIns: &apos;entry&apos;</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，这个属性会更强大一些。我们不需要手动引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> @babel-polyfill</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>，并且</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Babel </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>会对每个文件做判断决定是否引入</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> polyfill</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>我们在这个文件使用到了</span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Promise</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>const a = new Promise();</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Copy</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果浏览器是不支持的</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>import &quot;core-js/modules/es6.promise&quot;;</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>var a = new Promise();</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Copy</p><p></p><p><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>// </span><span style='color: rgba(58, 58, 58, 1.000000); font: 15px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如果浏览器支持</span></p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>var a = new Promise();</p><p style='color: rgba(58, 58, 58, 1.000000); font: 15px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>Copy</p></body>
</html>
</richcontent>
</node>
</node>
<node ID="B07E8029-3CCD-410E-85BF-A40F18519DEB" TEXT="&#26029;&#23830;&#24335;&#21464;&#26356;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="BC5F5E9A-87D2-46FB-9F47-1EB79B279117" TEXT="1&#12289;Babel &#23448;&#26041;&#30340;&#20381;&#36182;&#21253;&#37117;&#25918;&#22312; @babel &#20316;&#29992;&#22495;&#19979;&#12290;&#22914; babel-runtime&#65292;&#22312; Babel 7 &#20197;&#21518;&#35201;&#20197; @babel/runtime &#26041;&#24335;&#20351;&#29992;&#12290;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="D249A151-C2EB-4EB0-8965-97BADDAF5FF9" TEXT="2&#12289;presets &#24223;&#24323; stage-0&#12289;stage-1&#12289;stage-2&#12289;stage-3&#65292;&#25512;&#33616;&#20197;&#25554;&#20214;&#30340;&#24418;&#24335;&#24341;&#20837;&#65292;&#22914;@babel/plugin-proposal-decorators&#65307;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="A991CBF4-DEA7-4089-BD7B-C2195C8DC4A7" TEXT="3&#12289;babel-runtime &#34987;&#25286;&#20998;&#20026; @babel/runtime &#20197;&#21450; @babel/runtime-corejs2&#12290;&#21069;&#32773;&#21482;&#20445;&#30041;&#20102; regenerator-runtime &#21644; helpers&#65292;&#21518;&#32773;&#21516;&#26102;&#36824;&#20445;&#30041;&#20102; polyfill&#65292;&#19982;&#20043;&#21069;&#30340; babel-runtime &#22522;&#26412;&#19968;&#26679;&#12290;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="B32F9453-44F3-4678-B312-33B0BA399B86" TEXT="4&#12289;polyfill &#31227;&#38500;&#20102;&#22788;&#20110;&#25552;&#35758;&#20013;&#30340;&#29305;&#24615;&#65292;&#38656;&#35201;&#21333;&#29420;&#24341;&#20837;&#20381;&#36182;&#21253;&#12290;&#22914;&#30446;&#21069;&#36824;&#22788;&#20110; stage-3 &#30340; String.prototype.matchAll &#26041;&#27861;&#65292; &#38656;&#35201;&#29992; import &#34;core-js/fn/string/match-all&#34;; &#26041;&#24335;&#24341;&#20837;&#12290;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
</node>
</map>
