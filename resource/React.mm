<map version="1.0.0"><node ID="10175875-2FB8-4476-93CF-445F9D61EEAF" BACKGROUND_COLOR="#FFFFFF" TEXT="React" COLOR="#164355" POSITION="right" STYLE="bubble"><edge COLOR="#FFFFFF" WIDTH="2" /><font NAME="HelveticaNeue-Light" SIZE="24" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '>Now that we’re </span><a style='color: rgba(0, 0, 0, 1.000000); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; ' href='https://twitter.com/stefanpenner/status/532766326730002432'>not surprised</a><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '> by virtual DOM anymore and it is being adopted by </span><a style='color: rgba(0, 0, 0, 1.000000); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; ' href='https://github.com/emberjs/rfcs/pull/15'>other</a><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '> </span><a style='color: rgba(0, 0, 0, 1.000000); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; ' href='https://github.com/Raynos/mercury/'>frameworks</a><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '> </span><a style='color: rgba(0, 0, 0, 1.000000); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; ' href='http://lhorie.github.io/mithril/'>and</a><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '> </span><a style='color: rgba(0, 0, 0, 1.000000); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; ' href='https://github.com/staltz/cycle'>libraries</a><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '>, we can focus on examining React’s true strengths: </span><span style='color: rgba(0, 0, 0, 0.843137); font: bold 21px "Georgia"; -cocoa-font-postscriptname: "Georgia-Bold"; '>composition, unidirectional data flow, freedom from DSLs, explicit mutation and static mental model</span><span style='color: rgba(0, 0, 0, 0.843137); font: 21px "Georgia"; -cocoa-font-postscriptname: "Georgia"; '>.</span></p></body>
</html>
</richcontent>
<node ID="0694A9DC-8EDF-4060-AE96-1601A81AFE19" TEXT="&#35299;&#20915;&#30171;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="D7EA6754-2919-4C2F-A986-D9E623DAEBDA" TEXT="MVC &#21452;&#21521;&#32465;&#23450;&#21644;&#19968;&#23545;&#22810;&#30340;&#20851;&#31995;&#26131;&#36896;&#25104;&#32852;&#21160;&#20462;&#25913;&#65292;&#19981;&#21033;&#20110;&#35843;&#35797;&#21644;&#32500;&#25252;&#12290;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
<node ID="0C163226-8376-4A78-93D6-60B784236A05" TEXT="state" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="46E4A5C9-A9CE-4F60-B831-68D3A06F9095" TEXT="&#24212;&#35813;&#21253;&#21547;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="556690E8-D7B7-4C3E-AA7B-47285B891BAB" TEXT="&#32452;&#20214;&#30340;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#21487;&#33021;&#36827;&#34892;&#20462;&#25913;&#30340;&#12289;&#23548;&#33268; UI &#26356;&#26032;&#30340;&#25968;&#25454;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="B2D2585A-1E8E-454E-90C3-E9ABA1C692A0" TEXT="&#19981;&#24212;&#21253;&#21547;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="F884A186-EBA5-484F-81F8-85BC9D9A4846" TEXT="&#35745;&#31639;&#24471;&#20986;&#30340;&#25968;&#25454;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="C466A50A-0874-45E9-96DB-152D6624402A" TEXT="React &#32452;&#20214;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="D2CA5752-AC59-4DDC-8D8F-F435AA93F58C" TEXT="&#20174; props &#22797;&#21046;&#26469;&#30340;&#25968;&#25454;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="2CA67C74-B5D1-484D-BDFE-BE40004011E6" TEXT="Component &#19982; Element &#19982; Instance &#30340;&#21306;&#21035;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="E8A0157C-0F3D-4293-81AF-D06FF01A8DD1" TEXT="Element" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="A25B5566-A183-432D-8300-F8CA97EEE71A" TEXT="&#32431;&#31929;&#30340; Object &#23545;&#35937;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="D7A3F054-C102-491D-AED9-CBAF15A7BE26" TEXT="&#25551;&#36848; DOM &#32467;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="82FE532C-B94B-4EE2-A44B-7FAA4D59F397" TEXT="&#21253;&#25324; type, props, ref, key &#31561;&#23646;&#24615;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="A3E606BF-4132-4B2E-87F0-4AF87C115D6B" TEXT="&#19981;&#21253;&#25324; DOM &#30340;&#26041;&#27861;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="FB9C10DA-8B1F-4AC6-A512-79890CEF5FA6" TEXT="Component" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="C5A816B9-9A78-4585-A833-E44A811FC977" TEXT="&#32452;&#20214;&#32423;&#21035;&#30340;&#31867;&#25110;&#32773;&#35828;&#26159; Element &#30340;&#27169;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="65D0AF17-A3BF-4FC6-A785-4460D066DCD1" TEXT="&#19968;&#20010;&#25509;&#25910;&#21442;&#25968;&#24182;&#19988;&#36820;&#22238; React &#20803;&#32032;&#30340;&#20989;&#25968;&#25110;&#32773;&#31867;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="2092F494-8356-495D-835B-8CB577A28AC2" TEXT="Instance" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="2A0D87F0-0858-44FD-8589-A4163D6D9D28" TEXT="&#35843;&#29992; ReactDOM.render() &#25226;&#32452;&#20214;&#28210;&#26579;&#21040;&#19968;&#20010;&#20855;&#20307;&#30340; DOM &#20803;&#32032;&#20013;&#65292;&#36820;&#22238;&#30340;&#20540;&#21363;&#20351;&#19968;&#20010;&#23454;&#20363;&#65288;instance&#65289;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="5F43562D-4127-40E5-B0F8-DECB945EFAA7" TEXT="&#24322;&#27493;&#35831;&#27714;&#22312;&#21738;&#20010;&#29983;&#21629;&#21608;&#26399;&#25191;&#34892;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="AC839FA0-5817-48A5-87D1-4C6DD9F638E8" TEXT="&#36319;&#26381;&#21153;&#22120;&#31471;&#28210;&#26579;&#26377;&#20851;&#31995;&#65306;componentWillMount &#37324; fetch data &#20250;&#22312;&#26381;&#21153;&#22120;&#31471;&#21644;&#23458;&#25143;&#31471;&#21508;&#25191;&#34892;&#19968;&#27425;&#12290;&#22312; componentDidMount &#20013;&#21487;&#20197;&#35299;&#20915;&#36825;&#20010;&#38382;&#39064;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="3D32639F-0777-421D-B15C-6CE330ACB1FD" TEXT="componentWillMount &#20013;&#24322;&#27493;&#35831;&#27714;&#19981;&#20250;&#38459;&#22622;&#28210;&#26579;&#65292;&#22240;&#27492;&#32943;&#23450;&#20250;&#26377;&#19968;&#27425;&#31354;&#30333;&#28210;&#26579;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="CAD0D34D-3D2A-4F75-BC1E-AFF3053CBA00" TEXT="componentWillMount &#21487;&#33021;&#20250;&#34987;&#25191;&#34892;&#22810;&#27425;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
<node ID="BD654C77-FDE8-46CC-B685-35C42B82211F" TEXT="suspense" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="666ABB63-AC1D-4383-8025-6EAEB4B33F3A" TEXT="&#24341;&#20837;&#26032;&#30340; api&#65292;&#20351;&#20219;&#20309; state &#26356;&#26032;&#26242;&#20572;&#65292;&#30452;&#21040;&#26465;&#20214;&#28385;&#36275;&#26102;&#20877;&#28210;&#26579;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="0C1042FD-4B53-46B4-B6CF-4F78FD1D4943" TEXT="&#31867;&#27604; async/await" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="96CF1648-DE81-4060-B402-066D163F2868" TEXT="&#21033;&#29992; getDerivedStateFromError" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>前面我们说到，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>目前</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>react </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>的渲染模式还是同步的，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>一口气走到黑，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>那我现在画到 </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>clock </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>这里，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>但是这</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>clock </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>在另外一个文件里，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>服务器就需要去下载，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>什么时候能下载完呢，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>不知道。</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>假设你要花十分钟去下载，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>那这十分钟你让</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>react </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>去干啥，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>总不能一直等你吧。</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> Suspens </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>就是来解决这个问题的，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>你要画</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>clock</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>现在没有，那就会抛一个异常出来，我们之前说</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> componentDidCatch </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>和</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> getDerivedStateFromError</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>这两个函数就是来抓子组件或者子子组件抛出的异常的。</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>子组件有异常的时候就会往上抛，直到某个组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>getDerivedStateFromError </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>抓住这个异常，抓住之后干嘛呢，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>还能干嘛呀，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>忍着。</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>下载资源的时候会抛出一个</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>promise</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>会有地方(这里是</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>suspense</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>)捕捉这个</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>promise</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> suspense </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>实现了</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>getDerivedStateFromError</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> getDerivedStateFromError </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>捕获到异常的时候，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>一看，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>哎，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>小老弟，你来啦，还是个</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>promise</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>然后就等这个</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>promise resole</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> resolve </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>完成之后呢，它会尝试重新画一下子组件。这时候资源已经到本地了，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>也就能画成功了。</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>用伪代码</span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 15px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>大致实现一下：</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>getDerivedStateFromError(</span><span style='color: rgba(14, 114, 163, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>error</span><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>) {</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>   </span><span style='color: rgba(38, 38, 38, 1.000000); font: bold 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Bold"; '>if</span><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '> (isPromise(</span><span style='color: rgba(14, 114, 163, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>error</span><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>)) {</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>      </span><span style='color: rgba(14, 114, 163, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>error</span><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>.</span><span style='color: rgba(38, 38, 38, 1.000000); font: bold 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Bold"; '>then</span><span style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>(reRender);</span></p><p style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>   }</p><p style='color: rgba(38, 38, 38, 1.000000); font: 11px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>}</p></body>
</html>
</richcontent>
</node>
<node ID="3A61986A-192B-4F8C-A8E3-36362C63667F" TEXT="&#32593;&#36895;&#24555;&#26102;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="4E97BC9C-7B7B-4334-8605-C3A32900E503" TEXT="&#21487;&#35774;&#32622;&#24403;&#25972;&#20010;&#25968;&#25454;&#21040;&#36798; Dom&#65292;&#26356;&#26032;&#23436;&#27605;&#20197;&#21518;&#20877;&#28210;&#26579;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="4A491D60-D57F-4C6F-8E92-0D3A42500C88" TEXT="&#32593;&#36895;&#24930;&#26102;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="D661A688-182F-4135-8EE4-4521442BC9AA" TEXT="&#21487;&#35774;&#32622;&#65292;&#31934;&#30830;&#21040;&#21333;&#20010;&#32452;&#20214;&#30340;&#31561;&#24453;&#12289;&#20197;&#21450;&#26356;&#26032;&#65292;&#28982;&#21518;&#20877;&#28210;&#26579;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="E70EC3A5-94C9-498A-B1CF-0F0B9607062E" TEXT="&#25552;&#20379; high-level (createFetcher) &#21644; low-level(Placeholder, Loading)" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#FCB60D" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="64BC46E4-E3D6-4663-9922-4DEDE336CDDB" TEXT="setState" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="9FBA704D-3B66-449D-BC8E-26B96612FA7E" TEXT="&#24322;&#27493;&#26041;&#27861;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="E83283A1-46B7-4DAE-8534-084B38908B95" TEXT="batch update" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="B248D9A1-E4A9-4377-B5CA-BA703A9F2941" TEXT="&#26102;&#26426;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="5E6D979C-08AE-4E84-9982-AE2A0068C411" TEXT="&#39318;&#27425;&#28210;&#26579;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="1F91E975-31EB-47C5-86D7-98F66D098B5D" TEXT="&#25191;&#34892; setState" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="8FCA036B-A8C9-4900-A05E-4E312136428B" TEXT="&#20107;&#20214;&#22238;&#35843;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="A53AB5BA-8900-4B6F-833E-DCD3576BC9D2" TEXT="&#25191;&#34892; setState" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="2" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="11EFEC6A-B9C9-4544-A17E-2E22DA42C3F1" TEXT="&#19968;&#20010;&#29983;&#21629;&#21608;&#26399;&#20869;&#30340;&#25152;&#26377; setState &#26041;&#27861;&#20250;&#21512;&#24182;&#25805;&#20316;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="ABA98021-B6E2-472B-ADFA-7BAAF58DE646" TEXT="setState&#22312;&#29983;&#21629;&#21608;&#26399;&#20989;&#25968;&#21644;&#21512;&#25104;&#20989;&#25968;&#20013;&#37117;&#26159;&#24322;&#27493;&#26356;&#26032;" COLOR="#344852" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="4601439A-17A9-4465-9B63-C2DDC119D310" TEXT="v16 &#20043;&#21069;&#20165; batch &#29983;&#21629;&#21608;&#26399;&#20013;&#30340; setState" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="F8D25B62-0D4F-4314-9363-109D39C21631" TEXT="v17 &#20043;&#21518;&#25152;&#26377;&#30340; setState &#23558;&#37117;&#34987; batch" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="C46B4C46-EEED-4E23-AFE8-38F21804F373" TEXT="setTimeout &#20013;&#35843;&#29992;&#22810;&#27425;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="2D5659E2-214A-425A-8B10-A36BD2295135" TEXT="&#30001;&#20110; setTimeout &#30340;&#22238;&#35843;&#20989;&#25968;&#12300;&#19981;&#21463; React &#25511;&#21046;&#12301;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="887CF690-10DD-47F1-8BF7-06F12AE8615D" TEXT="&#20854;&#20013;&#30340; setState &#23601;&#26080;&#27861;&#34987; batch update" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="F6FBE2DD-F551-4AA9-A151-E1DEAE553D14" TEXT="&#23548;&#33268; render &#20989;&#25968;&#25191;&#34892;&#19977;&#27425;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="16846908-C912-4D39-87F2-22B3A2A46A8D" TEXT="setState &#20063;&#26159;&#31435;&#21363;&#29983;&#25928;&#65288;&#27492;&#26102;&#19981;&#22788;&#20110; batch update&#65289;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="7CF50C77-30F2-4A00-BFE0-F63487330551" TEXT="" COLOR="#435B66" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="2" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
</node>
<node ID="BABE85C7-B385-4609-BABC-FBC45EB7C10E" TEXT="unstable_batchedUpdates" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>promise.then(() =&gt; {</p><p><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>  </span><span style='color: rgba(114, 121, 128, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>// Forces batching</span></p><p><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>  </span><span style='color: rgba(36, 126, 159, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>ReactDOM</span><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>.unstable_batchedUpdates(() =&gt; {</span></p><p><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>    </span><span style='color: rgba(12, 0, 129, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>this</span><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>.setState({a: </span><span style='color: rgba(12, 0, 129, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>true</span><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>}); </span><span style='color: rgba(114, 121, 128, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>// Doesn&apos;t re-render yet</span></p><p><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>    </span><span style='color: rgba(12, 0, 129, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>this</span><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>.setState({b: </span><span style='color: rgba(12, 0, 129, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>true</span><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>}); </span><span style='color: rgba(114, 121, 128, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>// Doesn&apos;t re-render yet</span></p><p><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>    </span><span style='color: rgba(12, 0, 129, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>this</span><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>.props.setParentState(); </span><span style='color: rgba(114, 121, 128, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>// Doesn&apos;t re-render yet</span></p><p style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>  });</p><p><span style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>  </span><span style='color: rgba(114, 121, 128, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>// When we exit unstable_batchedUpdates, re-renders once</span></p><p style='color: rgba(36, 38, 40, 1.000000); font: 13px "Menlo"; -cocoa-font-postscriptname: "Menlo-Regular"; '>});</p></body>
</html>
</richcontent>
</node>
</node>
<node ID="A74B8146-5065-491F-928A-3F48D00E99CD" TEXT="transactions" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>var batchingStrategy = { isBatchingUpdates: false, batchedUpdates: function(callback, a, b, c, d, e) { // ... batchingStrategy.isBatchingUpdates = true; transaction.perform(callback, null, a, b, c, d, e); } };</p><p></p><p></p><p style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>作者：杨森</p><p><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>链接：</span><span style='color: rgba(0, 0, 0, 1.000000); font: 12px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>https://zhuanlan.zhihu.com/p/20328570</span></p><p style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>来源：知乎</p><p style='color: rgba(0, 0, 0, 1.000000); font: 12px "Songti SC"; -cocoa-font-postscriptname: "STSongti-SC-Regular"; '>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></body>
</html>
</richcontent>
<node ID="2FFC38DB-1793-4DAE-AB96-9D7A061892DB" TEXT="&#23558; method &#23553;&#35013;&#36215;&#26469;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="5D9F7782-6F9E-4046-873A-124A8960B431" TEXT="&#20351;&#29992; perform &#26041;&#27861;&#35843;&#29992;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="7FACF28E-2B26-4DDE-AC13-831BEDD12C01" TEXT="&#35843;&#29992;&#21069;&#25191;&#34892; wrapper &#20013;&#25152;&#26377;&#30340; initialize &#26041;&#27861;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="0DFC3465-71C1-43DF-8A28-1C95BA47EAF8" TEXT="&#35843;&#29992;&#21518;&#25191;&#34892; wrapper &#20013;&#25152;&#26377;&#30340; close &#26041;&#27861;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="66A2F20E-97C8-4620-980A-7378146C1532" TEXT="&#24212;&#29992;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="1A52C37A-D78B-4B3B-9E3F-AFF32A8CD6EB" TEXT="&#23558;&#25152;&#26377; React &#32452;&#20214;&#28210;&#26579;&#21040; DOM &#20013;&#30340;&#36807;&#31243;&#23601;&#22788;&#20110;&#19968;&#20010;&#22823;&#30340; Transaction &#20013;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#922AA4" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
</node>
<node ID="08408F0B-C36D-48F5-A8F1-BB299B1A61F9" TEXT="render" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="64C92333-A056-4443-B4DD-A2CF52CB3B5D" TEXT="&#20309;&#26102;&#35843;&#29992;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="800AFE13-DAB6-4320-887D-D7F9F1BB9879" TEXT="&#33258;&#36523;&#30340; state &#20540;&#21464;&#21270;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="9188D275-193F-4F84-90E7-B003C96DA352" TEXT="&#32487;&#25215;&#30340; props &#23646;&#24615;&#21464;&#21270;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="00D3A58A-60B1-46E1-BE92-21E01A5755EB" TEXT="&#27880;&#65306;&#21363;&#20351;&#25913;&#21464;&#30340;&#21069;&#21518;&#20540;&#37117;&#26159;&#19968;&#26679;&#30340;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="9BA3BEB6-2FDC-41D4-8E0D-3D0D4D8C290D" TEXT="&#35843;&#29992;&#21518; DOM &#26159;&#21542;&#26356;&#26032;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="AFA9FE20-BC98-40BC-8D2F-D68E4E950710" TEXT="Virtual DOM" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="34D7C196-2386-48D1-9D3C-DDEC36C75ECC" TEXT="Render &#20989;&#25968;&#34987;&#35843;&#29992;&#21518;&#65292;React &#31435;&#21363;&#26681;&#25454; props &#25110;&#32773; state &#26032;&#24314; Virtual DOM Tree&#65292;diff Virtual DOM &#21644; Real DOM&#65292;&#25214;&#20986;&#38656;&#35201;&#26356;&#26032;&#30340;&#26368;&#23567;&#27493;&#39588;&#65292;&#27492;&#26102; Real DOM &#25165;&#21487;&#33021;&#21457;&#29983;&#20462;&#25913;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="3" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
<node ID="C9A1C08F-4E5C-437A-A700-52D25751B8A0" TEXT="Real DOM" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
<node ID="3165F82B-24DA-4B4B-A439-02942C518575" TEXT="&#29238;&#32452;&#20214;&#26356;&#26032;&#26159;&#21542;&#23548;&#33268;&#23376;&#32452;&#20214;&#26356;&#26032;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>只要父组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>了，那么默认情况下就会触发子组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程，子组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程又会触发它的子组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程，一直到</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>React</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>元素（即</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>jsx</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>中的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>&lt;div&gt;</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>这样的元素）。当</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程到了叶子节点，即</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>React</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>元素的时候，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>diff</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程便开始了，这时候</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>diff</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>算法会决定是否切实更新</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>DOM</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>元素。</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>你可能会觉得这样不是很傻吗，我又没有传递属性给子组件，那父组件更新会触发所有后代组件的重渲染过程不是很低效且没有意义吗？但是</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>React</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>不能检测到你是否给子组件传了属性，所以它必须进行这个重渲染过程（术语叫做</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>reconciliation</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>）。但是这不会使得</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>react</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>有多低效，因为</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>reconciliation</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程是执行的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>JavaScript</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>，而重渲染的性能开销主要是更新</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>DOM</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>导致的，最后</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>diff</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>算法会介入，决定是否要真正更新</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>DOM</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>，</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>JavaScript</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>的执行速度很快的，所以即使父组件</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>会触发所有后代组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程(</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>reconciliation</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程)，这个效率也不会有太大影响。</span></p><p><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>当然，从道理上讲，既然我没有给子组件传递属性，或者我的程序能够判断出传递的属性并没有发生变化，那么自然无需进行子组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>reconciliation</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程。但是</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>react</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>无法自动检测这一点，于是它提供了</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>shouldComponentUpdate</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>回调函数，让程序员根据情况决定是否决定是否要重</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>本组件。如果某个组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>shouldComponentUpdate</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>总是返回</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>false</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '> </span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>那么当它的父组件</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>了，会触发该组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程，但是进行到</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>shouldComponentUpdate</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>判断时会被阻止掉，从而就不调用它的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>方法了，它自己下面的组件的</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>render</span><span style='color: rgba(38, 38, 38, 1.000000); font: 14px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>过程压根也不会触发了。</span></p></body>
</html>
</richcontent>
</node>
</node>
<node ID="8D1D18A4-FB16-447E-B975-ABEBFAF486C1" TEXT="ref" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#1286DE" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>大部分情况下，这是不必要的。因为响应式的数据流总是确保最近的</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> props </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>被送到每一个从</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(67, 67, 67, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>render()</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>输出的子级。然而，有一些情况下它仍旧是必要或者有益的，所以</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> React </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>提供了一个被称为</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(67, 67, 67, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>refs</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>的安全舱口。这些</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(67, 67, 67, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>refs</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>（引用）</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>在你需要时特别有用</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>如：查找被组件绘制的</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> DOM </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>标记（例如，绝对定位它），使用</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> React </span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>组件在一个大的非</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>React</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>组件里，或者转换你已有的代码库到</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '>React</span><span style='color: rgba(55, 55, 55, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>。</span></p></body>
</html>
</richcontent>
</node>
<node ID="EF271F36-E49F-4562-8532-D6A05C48FA81" TEXT="&#21103;&#20316;&#29992;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="DC9AA5CD-5622-47E4-957F-64B41AB69A51" TEXT="&#23450;&#20041;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="3267BF5E-AD00-4373-9494-8159C07B908A" TEXT="&#25968;&#25454;&#33719;&#21462;&#12289;&#35746;&#38405;&#25110;&#25163;&#21160;&#25913;&#21464; DOM" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="7ECF6D5A-CFC2-451A-94E7-88B0F2DADB7C" TEXT="&#26631;&#35760;&#21103;&#20316;&#29992;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="FB0B35BC-7CC8-4CC2-ACC8-71DED071D47B" TEXT="&#29983;&#25928;&#21103;&#20316;&#29992;&#26159;&#19968;&#31181; work&#65292;&#32780; fiber node &#26159;&#19968;&#31181;&#36861;&#36394;&#21103;&#20316;&#29992;&#30340;&#26041;&#20415;&#26426;&#21046;&#65292;&#27599;&#20010; fiber node &#37117;&#20851;&#32852;&#20102;&#21103;&#20316;&#29992;&#65292;&#32534;&#30721;&#21518;&#30340;&#21103;&#20316;&#29992;&#23384;&#25918;&#20110; effectTag &#23383;&#27573;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="7EAA0045-3ADE-4845-8FCB-A4D8E527A933" TEXT="&#21103;&#20316;&#29992;&#38142;&#34920;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="59ACC410-4E85-44E0-BF78-1347D9245737" TEXT="&#21407;&#22240;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="409C6B60-0898-4F6E-BACF-9100BED66030" TEXT="&#36941;&#21382;&#32447;&#24615;&#21015;&#34920;&#27604;&#26641;&#24555;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="9FBEBBC2-F268-46DE-8C03-75C1609B9503" TEXT="&#26080;&#38656;&#36941;&#21382;&#26080;&#21103;&#20316;&#29992;&#30340;&#33410;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="1485001F-824B-43BB-A8CB-0C882AD508E9" TEXT="&#30446;&#26631;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="4E55ED13-1545-4D7D-8523-2814F7815E53" TEXT="&#26631;&#35760;&#38656;&#35201; DOM &#26356;&#26032;&#25110;&#32773;&#20854;&#23427;&#21103;&#20316;&#29992;&#30340;&#33410;&#28857;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="F39D1930-588D-4E99-A784-C5CC8920989A" TEXT="&#35813;&#38142;&#34920;&#26159; finishedWork &#26641;&#30340;&#23376;&#38598;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="09FCBBAF-512E-479F-A07D-474948D6CA1A" TEXT="&#20351;&#29992; nextEffect &#23646;&#24615;&#36830;&#25509;&#32780;&#19981;&#26159;&#22312; current &#21644; workInProgress &#26641;&#20013;&#20351;&#29992;&#30340; child &#23646;&#24615;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="A9293096-E9B3-46CB-A978-0050D023AFD7" TEXT="useEffect" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="2793E228-B991-4B85-9275-DBC4B9D53E93" TEXT="&#29992;&#20110;&#22312; react &#26641;&#20043;&#22806;&#26681;&#25454; props &#21644; state &#21516;&#27493;&#19996;&#35199;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="C764BAD1-94B9-4731-85D7-4777F0944160" TEXT="&#31181;&#31867;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="C426F8BD-5BFF-4C4C-9B00-A3979AA321D6" TEXT="host components" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="AE35E62E-00B3-4875-B566-8A917869BA1B" TEXT="&#23545;&#20803;&#32032;&#36827;&#34892;&#22686;&#21024;&#25913;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="E14D07A9-64E4-43D9-9487-0207D07E0DA3" TEXT="class components" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="4FA54734-A769-4A15-8B8E-FAB6D385789D" TEXT="&#26356;&#26032; refs" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="2DB8DC7D-6A7F-4A2B-9746-08CE8C79B6E4" TEXT="&#35843;&#29992;" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="1E9228A8-2F4A-4CF6-A622-ED6B3A53BFF0" TEXT="componentDidMount" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="2" /><font NAME="HelveticaNeue" SIZE="18" /></node>
<node ID="C7BED792-2B53-4550-BA95-C473BBE9D3BA" TEXT="componentDidUpdate" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="2" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
</node>
</node>
</node>
<node ID="FF64B4F0-C762-4223-9F12-C99F7320002A" TEXT="updater" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="1B75DC92-B580-48D2-AB33-830D6897B6EE" TEXT="react component &#25317;&#26377;&#19968;&#20010;&#19982;&#20043;&#20851;&#32852;&#30340; updater&#65292;&#23427;&#36830;&#25509;&#20102; components &#21644; React core" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="CECF8619-E59D-40DE-9F9D-4781C99B4E96" TEXT="&#20351;&#24471; ReactDom &#21644; ReactNative&#65292;ssr&#65292;&#27979;&#35797;&#24037;&#20855;&#33021;&#22815;&#20998;&#21035;&#23454;&#29616; setState" COLOR="#344853" POSITION="right" STYLE="fork"><edge COLOR="#389237" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="D3E57B81-0FDE-4848-AA29-98A991748623" TEXT="&#22914;&#20309;&#35774;&#35745;&#19968;&#20010;&#22909;&#27169;&#22359;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="ED9220BB-C273-46D8-B32B-14D912136364" TEXT="&#39640;&#20869;&#32858;&#65292;&#20302;&#32806;&#21512;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="9FBA1570-8CD7-4AA5-8BE0-F73BE070226A" TEXT="&#30456;&#21516;&#21151;&#33021;&#30340;&#37096;&#20998;&#25918;&#22312;&#19968;&#36215;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>如果你想去反向验证你的设计是否符合这个原则的话，可以尝试去修改这个模块的一个功能，看看到底是否会牵连其他模块的修改；或者当你想复用这个组件时，是否会引入其他无关的组件。</p></body>
</html>
</richcontent>
</node>
<node ID="9A405255-0D0A-400A-BD8C-82028B7D0322" TEXT="&#19981;&#30456;&#24178;&#30340;&#37096;&#20998;&#23613;&#21487;&#33021;&#30340;&#25735;&#24320;&#20851;&#31995;" COLOR="#334752" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="DADF1DE2-6AD2-4BB8-B7B5-4AD5C6D0B9C7" TEXT="S.O.L.I.D" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="HelveticaNeue" SIZE="18" /><node ID="949E4F28-599E-40E5-BD44-E2B87CFB0909" TEXT="&#21333;&#19968;&#32844;&#36131; (Single responsibility principle)" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="0CF9D47C-B8DD-4ED4-A35E-15823A11869C" TEXT="&#27599;&#20010;&#32452;&#20214;&#20165;&#20570;&#19968;&#20214;&#20107;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>React 组件设计推崇的是 “组合”，而非 “继承”。例如你的页面需要一个表单组件，表单中需要有输入框，按钮，列表，单选框等。那么在开发中你不应该只开发一（整）个表单组件（</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&lt;Form&gt;</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>），而是应该开发若干个单一功能的组件，比如输入框</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&lt;Input&gt;</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>、提交按钮</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&lt;Submit&gt;</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>、单选框</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&lt;Checkbox&gt;</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>等，最后再将它们组合起来。</span></p></body>
</html>
</richcontent>
</node>
</node>
<node ID="5380A31A-A556-43DA-A979-B1F38F4698D1" TEXT="&#24320;&#25918; / &#23553;&#38381; (Open/closed principle)&#160;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="10138020-848F-4B8B-9814-5C552AB83D69" TEXT="&#23545;&#20462;&#25913;&#23553;&#38381;&#65288;&#31105;&#27490;&#20462;&#25913;&#20869;&#37096;&#20195;&#30721;&#65289;&#65288;HOC&#65289;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(0, 0, 0, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>强调设计良好的代码可以不通过修改而扩展，新的功能通过添加新的代码来实现，而不需要更改已有的可工作的代码</p><p></p><p style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>因为修改意味着风险，可能会影响到不用修改的代码， 同时意味着暴露细节。你一定纳闷如果不允许修改代码的话如何拓展功能呢，在传统的面向对象编程中，这样的需求是通过继承和接口机制来实现的。在 React 中我们使用官方推荐的 Higher-Order Components 的模式去实现。这个在后面会详细叙述。</p></body>
</html>
</richcontent>
</node>
<node ID="862E151F-CB82-4296-AD11-112E14204862" TEXT="&#23545;&#25299;&#23637;&#24320;&#25918;&#65288;&#20801;&#35768;&#20320;&#25299;&#23637;&#21151;&#33021;&#65289;&#65288;HOC&#65289;" COLOR="#334752" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="7D69D97D-657E-42D2-8A2E-B61EF165736C" TEXT="&#37324;&#27663;&#26367;&#25442;&#65288;The Liskov Substitution Principle&#65289;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="F1DF6C8D-26BE-4CD7-98F2-B7172BB23E9C" TEXT="&#20351;&#29992;&#22522;&#31867;&#23545;&#35937;&#25351;&#38024;&#25110;&#24341;&#29992;&#30340;&#20989;&#25968;&#24517;&#39035;&#33021;&#22815;&#22312;&#19981;&#20102;&#35299;&#34893;&#29983;&#31867;&#30340;&#26465;&#20214;&#19979;&#20351;&#29992;&#34893;&#29983;&#31867;&#30340;&#23545;&#35937;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="1EB48F3E-0C72-47CD-99D1-4D1E5E433F24" TEXT="&#20381;&#36182;&#21453;&#36716;&#65288;Dependency inversion principle&#65289;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>这条原则是意思是，当你在为一个框架编写模块或者组件时，你只需要负责实现接口，并且到注册到框架里即可，然后等待框架来调用你，所以它的另另一个别名是 “Don’t call us, we’ll call you”。</p><p></p><p></p><p><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>const</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>app</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(243, 0, 95, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>=</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>express</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>();</span></p><p><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>module</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>.</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>exports</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(243, 0, 95, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>=</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>function</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>(</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>app</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>)</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>{</span></p><p><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>app</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>.</span><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>get</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>(</span><span style='color: rgba(223, 213, 97, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&apos;/newRoute&apos;</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>function</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>(</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>req</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>res</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>)</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>{...})</span></p><p style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>};</p><p><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>这意味着你正在编写的这个模块负责了</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>/newRoute</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>这个路径的处理，这个模块在掌握着主动权。</span></p><p style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>而用依赖反转的写法是：</p><p><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>module</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>.</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>exports</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(243, 0, 95, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>=</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>function</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>plugin</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>()</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>{</span></p><p><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	</span><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>return</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>{</span></p><p><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>		</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>method</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>:</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(223, 213, 97, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&apos;get&apos;</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span></p><p><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>		</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>route</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>:</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(223, 213, 97, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>&apos;/newRoute&apos;</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span></p><p><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>		</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>handler</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>:</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(87, 209, 234, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>function</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>(</span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>req</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>,</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(151, 224, 35, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>res</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>)</span><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '> </span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>{...}</span></p><p><span style='color: rgba(197, 197, 197, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>	</span><span style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>}</span></p><p style='color: rgba(246, 246, 238, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>}</p><p style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>意味着你把控制权交给了引用这个模块的框架，这样的对比就体现了控制权的反转。</p></body>
</html>
</richcontent>
<node ID="09594A4A-B664-47FD-B189-270578B8265B" TEXT="&#19968;&#20010;&#26041;&#27861;&#24212;&#35813;&#36981;&#20174; &#8220;&#20381;&#36182;&#20110;&#25277;&#35937;&#32780;&#19981;&#26159;&#19968;&#20010;&#23454;&#20363;&#8221;" COLOR="#334752" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
<node ID="B150EA82-78ED-439C-BB28-41B5542FF629" TEXT="&#25509;&#21475;&#38548;&#31163;&#65288;Interface segregation principle&#65289;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>第三方类库或者模块都避免不了对外提供调用接口，比如对于 jQuery 来说</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>$</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>是选择器，</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>css</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>用于设置样式，</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>animate</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>负责动画，你不希望把这三个接口都合并成一个叫做</span><span style='color: rgba(25, 25, 25, 1.000000); font: 9px "Times"; -cocoa-font-postscriptname: "Times-Roman"; '>together</span><span style='color: rgba(25, 25, 25, 1.000000); font: 16px "Helvetica"; -cocoa-font-postscriptname: "Helvetica"; '>吧，虽然实现起来没有问题，但是对于你将来维护这个类库，以及使用者调用类库，以及调用者的接替者阅读代码（因为他要区分不同上下文中调用这个接口究竟是用来干嘛的），都是不小的困难。</span></p></body>
</html>
</richcontent>
<node ID="84CBCECE-D8BB-400C-AF53-76B87F814633" TEXT="&#22810;&#20010;&#29305;&#23450;&#23458;&#25143;&#31471;&#25509;&#21475;&#35201;&#22909;&#20110;&#19968;&#20010;&#23485;&#27867;&#29992;&#36884;&#30340;&#25509;&#21475;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="3" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="C9707EDC-122C-4D01-8BC1-82304EC75A5E" TEXT="&#20195;&#30721;&#23618;&#38754;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="3BD264A2-4EA8-4FAC-94A6-D52E81AE1EB8" TEXT="&#21487;&#35835;&#24615;&#24378;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="EE54FCD6-3AB0-4F16-87F0-E002FBE0DF0F" TEXT="&#22797;&#29992;&#24615;&#39640;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
<node ID="D6D8B044-00B9-4F90-A8DD-6ACCBCDA0887" TEXT="&#21487;&#32500;&#25252;&#24615;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#25BAD1" WIDTH="4" /><font NAME="PingFangSC-Regular" SIZE="18" /></node>
</node>
</node>
<node ID="1DE690D2-B83E-417B-B3EC-1FA8B3B912FA" TEXT="&#32452;&#20214;&#20248;&#21270;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#DC2128" WIDTH="6" /><font NAME="PingFangSC-Regular" SIZE="18" /><node ID="C7C57FDD-8A6D-495E-A9D2-E0BDB7A5A152" TEXT="&#20351;&#29992;&#32447;&#19978;&#26500;&#24314;&#65288;Production Build&#65289;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#DC2128" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>会移除脚本中不必要的警告和报错，减少文件体积</p></body>
</html>
</richcontent>
</node>
<node ID="80FF212B-A6A1-41DD-A99A-11822591C3F7" TEXT="&#36991;&#20813;&#37325;&#32472; &#65288;Avoid Reconciliation&#65289;" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#DC2128" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>重写</span><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> shouldComponentUpdate </span><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>函数，手动控制是否应该调用</span><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> render </span><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>函数进行重绘</span></p></body>
</html>
</richcontent>
</node>
<node ID="9F8C379B-E074-486F-9E2D-02BA03B83906" TEXT="&#20351;&#29992; Immutable Data" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#DC2128" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>尽可能的不修改数据，而是重新赋值数据。这样的话，在检测数据对象是否发生修改方面会非常快，只需要检测对象引用即可，而不用挨个的检测对象属性的更改</p></body>
</html>
</richcontent>
</node>
<node ID="BEE379D5-91F9-4988-886B-8437C01F1D79" TEXT="&#28210;&#26579;&#32452;&#20214;&#30340;&#26102;&#20505;&#28155;&#21152; key" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#DC2128" WIDTH="5" /><font NAME="PingFangSC-Regular" SIZE="18" /><richcontent TYPE="NOTE"><html><head></head>
<body><p><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>标记元素的唯一性，这样</span><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '> Virtual DOM </span><span style='color: rgba(25, 25, 25, 1.000000); font: 18px "PingFang SC"; -cocoa-font-postscriptname: "PingFangSC-Regular"; '>在对比时就会更容易发现哪里，哪里是修改元素，哪里是新插入的元素</span></p></body>
</html>
</richcontent>
</node>
</node>
<node ID="CCCA6295-A265-4F50-99C6-F31E814A7B31" TEXT="Top-Level-API" COLOR="#344853" POSITION="left" STYLE="fork"><edge COLOR="#1286DE" WIDTH="6" /><font NAME="HelveticaNeue" SIZE="18" /></node>
</node>
</map>
